package com.example.demo.getpicturedemo;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;

import java.io.File;

public class MainActivity extends Activity {

    private static final int TAKE_PHOTO = 11;// 촬영하다
    private static final int CROP_PHOTO = 12;// 사진을 재단하다
    private static final int LOCAL_CROP = 13;// 로컬 라이브러리

    private Button btn_choose_picture;
    private ImageView iv_show_picture;
    private Uri imageUri;// 사진 찍을 때 이미지 uri


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        setViews();// 초기화 컨트롤
        setListeners();// 감청 설정
    }

    /**
     * 감청 설정
     */
    private void setListeners() {

        // 그림 보기 단추 클릭 이벤트
        btn_choose_picture.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                takePhotoOrSelectPicture();// 사진 찍거나 갤러리 불러오기

            }
        });

    }

    /**
     *
     */
    private void takePhotoOrSelectPicture() {
        CharSequence[] items = {"촬영","갤러리"};// items 잘라내기 옵션

        // 사진을 찍거나 로컬 갤러리에서 그림을 선택하라는 팝업 대화 상자
        new AlertDialog.Builder(MainActivity.this)
                .setItems(items, new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        switch (which){
                            // 사진 찍는 걸 골랐어요
                            case 0:
                                // 사진 찍기 위한 파일 저장하기
                                File takePhotoImage = new File(Environment.getExternalStorageDirectory(), "take_photo_image.jpg");
                                try {
                                    // 파일 존재, 파일 삭제
                                    if(takePhotoImage.exists()){
                                        takePhotoImage.delete();
                                    }
                                    // 경로 이름에 따라 자동으로 새 빈 파일 만들기
                                    takePhotoImage.createNewFile();
                                }catch (Exception e){
                                    e.printStackTrace();
                                }
                                // 사진 파일의 uri 개체 가져오기
                                imageUri = Uri.fromFile(takePhotoImage);
                                // 휴대폰 카메라를 작동시켜 사진을 찍을 수 있는 Intent 만들기
                                Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                                // 파일 uri로 출력 지정
                                intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);
                                // 인텐트를 시작하여 사진을 찍기 시작합니다
                                startActivityForResult(intent, TAKE_PHOTO);
                                break;
                            // 시스템 라이브러리 호출
                            case 1:

                                // 그림을 선택하기 위해 그림 갤러리를 여는 Intent 만들기
                                Intent intent1 = new Intent(Intent.ACTION_PICK,
                                        android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
                                // intent를 시작하여 로컬 갤러리 열기
                                startActivityForResult(intent1,LOCAL_CROP);
                                break;

                        }

                    }
                }).show();
    }


    /**
     * startActivityForResult 메서드를 호출하여 intent를 시작한 후，
     * 이 방법에서 반환된 데이터를 얻을 수 있다
     */
    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        switch (requestCode){

            case TAKE_PHOTO:// 사진

                if(resultCode == RESULT_OK){
                    // 그림을 자르기 위한 intent 만들기
                    Intent intent = new Intent("com.android.camera.action.CROP");
                    // 설정 데이터는 파일 uri, 유형은 사진 형식
                    intent.setDataAndType(imageUri,"image/*");
                    // 재단을 허가하다
                    intent.putExtra("scale",true);
                    // 파일 uri로 출력 지정
                    intent.putExtra(MediaStore.EXTRA_OUTPUT,imageUri);
                    // intent 시작, 커팅 시작
                    startActivityForResult(intent, CROP_PHOTO);
                }
                break;
            case LOCAL_CROP:// 시스템 라이브러리

                if(resultCode == RESULT_OK){
                    // 그림을 자르기 위한 intent 만들기
                    Intent intent1 = new Intent("com.android.camera.action.CROP");
                    // 라이브러리에서 선택한 그림의 uri 가져오기
                    Uri uri = data.getData();
                    intent1.setDataAndType(uri,"image/*");
                    //  잘라낸 그림의 너비 설정
                    intent1.putExtra("outputX", 300);
                    intent1.putExtra("outputY", 300);
                    // 잘라낸 후 데이터 반환
                    intent1.putExtra("return-data", true);
                    // intent 시작, 커팅 시작
                    startActivityForResult(intent1, CROP_PHOTO);
                }

                break;
            case CROP_PHOTO:// 커팅 후 이미지 표시
                if(resultCode == RESULT_OK){
                    try{
                        // 사진찍고 컷팅한 이미지 보여줌
                        if(imageUri != null){
                            // BitmapFactory.Options 개체 만들기
                            BitmapFactory.Options option = new BitmapFactory.Options();
                            // bitmap 개체를 압축하기 위한 속성 설정
                            option.inSampleSize = 2;
                            option.inPreferredConfig = Bitmap.Config.RGB_565;
                            // 파일 흐름 해석에 따른 Bitmap 개체 생성
                            Bitmap bitmap = BitmapFactory.decodeStream(getContentResolver().openInputStream(imageUri), null, option);
                            // 그림을 전시하다.
                            iv_show_picture.setImageBitmap(bitmap);
                        }

                        // 라이브러리에서 선택한 잘라낸 그림 보기
                        if(data != null){
                            // 반환된 data에 따라 Bitmap 객체 가져오기
                            Bitmap bitmap = data.getExtras().getParcelable("data");
                            // 그림을 전시하다
                            iv_show_picture.setImageBitmap(bitmap);

                        }

                    }catch (Exception e){
                        e.printStackTrace();
                    }
                }
                break;

        }

    }

    /**
     * 컨트롤 초기화
     */
    private void setViews() {
        btn_choose_picture = (Button)findViewById(R.id.btn_choose_picture);
        iv_show_picture = (ImageView)findViewById(R.id.iv_show_picture);
    }
}
